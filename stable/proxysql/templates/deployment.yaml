apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    {{- include "proxysql.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "proxysql.selectorLabels" . | nindent 6 }}
  replicas: 1
  template:
    metadata:
    {{- if .Values.annotations }}
      annotations:
    {{ toYaml .Values.annotations | indent 4 }}
    {{- end }}
      labels:
        {{- include "proxysql.selectorLabels" . | nindent 8 }}
    spec:
      {{- if .Values.initContainer.enabled }}
      initContainers:
        - name: {{ .Chart.Name }}-add-tag
          image: {{ .Values.initContainer.image.repository }}:{{ .Values.initContainer.image.tag }}
          imagePullPolicy: {{ .Values.initContainer.image.pullPolicy }}
          command:
          - bash
          - -c
          - >
            echo "Adding tag for AWS Secrets Manager secret";
            {{ if .Values.appName }}
            echo "Command to run: aws secretsmanager tag-resource --secret-id {{ .Values.environment }}-{{ .Values.appName }}-rds-credentials --tags '[{"Key": "proxysql_rds_role", "Value": "{{ .Values.proxysql_role }}"}, {"Key": "proxysql_rds_enabled", "Value": "true"}]'";
            aws secretsmanager tag-resource --secret-id {{ .Values.environment }}-{{ .Values.appName }}-rds-credentials --tags '[{"Key": "proxysql_rds_role", "Value": "{{ .Values.proxysql_role }}"}, {"Key": "proxysql_rds_enabled", "Value": "true"}]';
            {{ else }}
            echo "Command to run: aws secretsmanager tag-resource --secret-id {{ .Values.environment }}-{{ .Release.Name }}-rds-credentials --tags '[{"Key": "proxysql_rds_role", "Value": "{{ .Values.proxysql_role }}"}, {"Key": "proxysql_rds_enabled", "Value": "true"}]'";
            aws secretsmanager tag-resource --secret-id {{ .Values.environment }}-{{ .Release.Name }}-rds-credentials --tags '[{"Key": "proxysql_rds_role", "Value": "{{ .Values.proxysql_role }}"}, {"Key": "proxysql_rds_enabled", "Value": "true"}]';
            {{- end }}
            echo "Done";
      {{- end }}      
      containers:
        - name: {{ .Chart.Name }}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          ports:
            - name: proxysql
              containerPort: 6033
              protocol: TCP
            - name: admin
              containerPort: 6032
              protocol: TCP
            - name: metrics
              containerPort: 6070
              protocol: TCP
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{ if .Values.imagePullSecrets }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}
      {{- if .Values.serviceAccount.enabled }}
      serviceAccountName: {{ .Chart.Name }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
